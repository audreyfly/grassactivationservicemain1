{"version":3,"file":"thymeleaf.browser.es.js","sources":["../source/processors/AttributeProcessor.js","../source/standard/processors/AttrAttributeProcessor.js","../source/processors/ElementProcessor.js","../source/utilities/Dom.js","../source/standard/processors/BlockElementProcessor.js","../source/standard/processors/CheckedAttributeProcessor.js","../source/standard/processors/ClassAppendAttributeProcessor.js","../source/standard/processors/EachAttributeProcessor.js","../source/standard/processors/EmptyableAttributeProcessor.js","../source/standard/processors/FragmentAttributeProcessor.js","../source/standard/processors/IfAttributeProcessor.js","../source/utilities/Fragments.js","../source/standard/processors/InsertAttributeProcessor.js","../source/standard/processors/RemovableAttributeProcessor.js","../source/standard/processors/RemoveAttributeProcessor.js","../source/standard/processors/ReplaceAttributeProcessor.js","../source/utilities/Messages.js","../source/standard/processors/TextAttributeProcessor.js","../source/standard/processors/UnlessAttributeProcessor.js","../source/standard/processors/UTextAttributeProcessor.js","../source/standard/processors/WithAttributeProcessor.js","../source/standard/processors/XmlNsAttributeProcessor.js","../source/dialects/Dialect.js","../source/standard/StandardDialect.js","../source/Configurations.js","../source/processors/Matcher.js","../source/parser/InputBuffer.js","../source/parser/Parser.js","../source/standard/expressions/ExpressionProcessor.js","../source/standard/expressions/AllInput.js","../source/parser/Rule.js","../source/standard/expressions/ThymeleafRule.js","../source/parser/Grammar.js","../source/parser/Operators.js","../source/standard/expressions/FragmentSignatureGrammar.js","../source/parser/RegularExpression.js","../source/utilities/getByPath.js","../source/standard/expressions/ThymeleafExpressionLanguage.js","../source/TemplateEngine.js"],"sourcesContent":["/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for attribute processors.\n * \n * @author Emanuel Rabina\n */\nexport default class AttributeProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {string} prefix\n\t * @param {string} name\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tthis.prefix     = prefix;\n\t\tthis.name       = name;\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Process the given attribute on the element it appears.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} Whether or not the parent tree needs reprocessing because\n\t *   of modifications made by the processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tif (this.isomorphic) {\n\t\t\telement.removeAttribute(`${this.prefix}:${this.name}`);\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nimport {escapeHtml} from '@ultraq/string-utils';\n\nexport const NAME = 'attr';\n\n/**\n * JS equivalent of Thymeleaf's `th:attr` attribute processor, modifies or sets\n * a target attribute to whatever its associated expression evaluates to.\n * \n * @author Emanuel Rabina\n */\nexport default class AttrAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:attr` or `data-th-attr` attribute\n\t * on it, picking out the target attributes and setting them to whatever their\n\t * expressions evaluate to.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\t// TODO: This regex, is this some kind of value list that needs to be\n\t\t//       turned into an expression?\n\t\tif (/(.+=.+,)*.+=.+/.test(attributeValue)) {\n\t\t\tattributeValue.split(',').forEach(attribute => {\n\t\t\t\tlet [name, value] = attribute.split('=');\n\t\t\t\tlet processorResult = context.expressionProcessor.process(value, context);\n\t\t\t\telement.setAttribute(name, escapeHtml(\n\t\t\t\t\ttypeof processorResult === 'string' ?\n\t\t\t\t\t\tprocessorResult :\n\t\t\t\t\t\tJSON.stringify(processorResult))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\t/* istanbul ignore next */\n\t\telse if (process.env.NODE_ENV !== 'test') {\n\t\t\tconsole.warn(`Value to ${attribute}, ${attributeValue}, doesn't seem to contain an attribute assignment expression.  Ignoring.`);\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parent class for element processors.\n * \n * @author Emanuel Rabina\n */\nexport default class ElementProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {string} prefix\n\t * @param {string} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tthis.prefix = prefix;\n\t\tthis.name   = name;\n\t}\n\n\t/**\n\t * Processes the given element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {object} context\n\t * @return {boolean} Whether or not the parent tree needs reprocessing because\n\t *   of modifications made by the processor.\n\t */\n\tprocess(element, context) {\n\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global ENVIRONMENT */\nimport {\n\tdeserialize as domDeserialize,\n\tserialize as domSerialize\n}              from '@ultraq/dom-utils';\nimport {JSDOM} from 'jsdom';\n\n// Node.nodeType values, not present outside of a JSDOM environment so can't\n// reference them w/ Node.X\n// For a full list of values, see: https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nexport const NODE_TYPE_DOCUMENT_TYPE = 10;\nexport const NODE_TYPE_ELEMENT = 1;\n\n/**\n * Create and return a new HTML fragment using JSDOM from the given string.\n * Used for tests.\n * \n * @param {string} htmlString\n * @return {Element}\n */\nexport function createHtml(htmlString) {\n\treturn new JSDOM(htmlString).window.document.body.firstElementChild;\n}\n\n/**\n * Returns the value of a Thymeleaf attribute processor.\n * \n * @param {Element} element\n * @param {string} prefix\n * @param {string} processorName\n * @return {string} The value of the Thymeleaf attribute processor, or `null`\n *   if the attribute processor wasn't present.\n */\nexport function getThymeleafAttributeValue(element, prefix, processorName) {\n\treturn element.getAttribute(`${prefix}:${processorName}`) ||\n\t       element.getAttribute(`data-${prefix}-${processorName}`);\n}\n\n/**\n * Use either JSDOM or the browser's native DOM parsing to deserialize the HTML\n * string into a document fragment.\n * \n * @param {string} htmlString\n * @return {DocumentFragment}\n */\nexport function deserialize(htmlString) {\n\t/* istanbul ignore if */\n\tif (ENVIRONMENT === 'browser') {\n\t\treturn domDeserialize(htmlString);\n\t}\n\telse {\n\t\treturn new JSDOM(htmlString).window.document;\n\t}\n}\n\n/**\n * Use either JSDOM or the browser's native DOM serialization to serialize a\n * document fragment into an HTML string.\n * \n * @param {DocumentFragment} documentFragment\n * @return {string}\n */\nexport function serialize(documentFragment) {\n\t/* istanbul ignore if */\n\tif (ENVIRONMENT === 'browser') {\n\t\treturn domSerialize(documentFragment);\n\t}\n\telse {\n\t\tlet result = '';\n\t\tlet {firstChild, firstElementChild} = documentFragment;\n\t\tif (firstChild.nodeType === NODE_TYPE_DOCUMENT_TYPE) {\n\t\t\tresult += `<!DOCTYPE ${firstChild.name}>`;\n\t\t}\n\t\treturn result + firstElementChild.outerHTML;\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ElementProcessor    from '../../processors/ElementProcessor.js';\nimport {NODE_TYPE_ELEMENT} from '../../utilities/Dom.js';\n\nexport const NAME = 'block';\n\n/**\n * Equivalent of Thymeleaf's \"synthetic tag\", `th:block`, which removes itself,\n * leaving the body of the tag behind.\n * \n * @author Emanuel Rabina\n */\nexport default class BlockElementProcessor extends ElementProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `block` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, NAME);\n\t}\n\n\t/**\n\t * Processes an element named `th:block`, removing itself to leave its\n\t * body/contents behind.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {object} context\n\t * @return {boolean} `true` to indicate that the elements need reprocessing.\n\t */\n\tprocess(element, context) {\n\n\t\tlet parent = element.parentElement;\n\t\twhile (element.firstChild) {\n\t\t\tlet child = element.firstChild;\n\t\t\tparent.insertBefore(child, element);\n\n\t\t\tif (child.nodeType === NODE_TYPE_ELEMENT && element.__thymeleafLocalVariables) {\n\t\t\t\tchild.__thymeleafLocalVariables = {\n\t\t\t\t\t...(child.__thymeleafLocalVariables || {}),\n\t\t\t\t\t...element.__thymeleafLocalVariables\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tparent.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'checked';\n\n/**\n * Thymeleaf's `th:checked` attribute processor, sets or removes the `checked`\n * attribute from an element based on the result of the expression within it.\n * \n * TODO: This is one of HTML5s \"boolean attributes\", attributes whose values are\n *       true simply by being present in the element, regardless of the value\n *       inside it.  To act as false, the attribute has to be removed.  Find a\n *       way to generate these from some list of boolean attributes so that I\n *       don't need to write a class for each one!\n * \n * @author Emanuel Rabina\n */\nexport default class CheckedAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `checked` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:checked` or `data-th-checked`\n\t * attribute on it, either setting or removing a `checked` attribute to the\n\t * current element based on the result of the inner expression.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet result = context.expressionProcessor.process(attributeValue, context);\n\t\tif (result) {\n\t\t\telement.setAttribute('checked', '');\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute('checked');\n\t\t}\n\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'classappend';\n\n/**\n * The `th:classappend` is a special attribute that applies the expression to\n * any existing classes already on an element.\n * \n * @author Emanuel Rabina\n */\nexport default class ClassAppendAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:classappend` or `data-th-classappend`\n\t * attribute on it, adding the resulting classes to any existing classes on\n\t * the current element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet classes = context.expressionProcessor.process(attributeValue, context);\n\t\tif (classes) {\n\t\t\telement.className += ` ${classes}`;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'each';\n\n/**\n * JS equivalent of Thymeleaf's `th:each` attribute processor, iterates over an\n * [iterable object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols),\n * executing a piece of template for every iteration.\n * \n * @author Emanuel Rabina\n */\nexport default class EachAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `each` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:each`/`data-th-each` attribute,\n\t * repeating the markup for every object in the iterable value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tlet iterationInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (iterationInfo) {\n\t\t\tlet {localValueName, iterable} = iterationInfo;\n\t\t\tlet templateNode = element.cloneNode(true);\n\n\t\t\tfor (let value of iterable) {\n\t\t\t\tlet localClone = templateNode.cloneNode(true);\n\t\t\t\tlocalClone.__thymeleafLocalVariables = {\n\t\t\t\t\t[localValueName]: value\n\t\t\t\t};\n\t\t\t\telement.parentElement.appendChild(localClone);\n\t\t\t}\n\t\t}\n\t\telement.parentElement.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * Configurable attribute processor that sets or empties an attribute value on\n * an element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class EmptyableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {string} prefix\n\t * @param {string} name\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tsuper(prefix, name, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = context.expressionProcessor.process(attributeValue, context);\n\t\telement.setAttribute(this.name, value ? value.toString() : '');\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n\nexport const EMPTYABLE_ATTRIBUTE_NAMES = [\n\t'datetime',\n\t'href',\n\t'src',\n\t'style',\n\t'value'\n];\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'fragment';\n\n/**\n * JS equivalent of Thymeleaf's `th:fragment` attribute processor, marks an\n * element as a template fragment that can be imported by other processors like\n * `th:insert`.\n * \n * @author Emanuel Rabina\n */\nexport default class FragmentAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `fragment` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'if';\n\n/**\n * JS equivalent of Thymeleaf's `th:if` attribute processor, includes or\n * excludes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Emanuel Rabina\n */\nexport default class IfAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `if` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:if` or `data-th-if` attribute\n\t * on it, evaluating the expression for truthy/falsey, rendering/excluding the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `true` if the element was removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = context.expressionProcessor.process(attributeValue, context);\n\t\tif (!expressionResult) {\n\t\t\telement.remove();\n\t\t\treturn true;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {deserialize} from './Dom.js';\nimport {NAME}        from '../standard/processors/FragmentAttributeProcessor.js';\n\nimport {$} from 'dumb-query-selector';\n\n/**\n * Extract HTML from the target identified by the given fragment information.\n * \n * @param {string} dialectPrefix\n * @param {object} fragmentInfo\n * @param {object} context\n * @return {Promise<Element>}\n */\nexport async function extractFragment(dialectPrefix, fragmentInfo, context) {\n\tlet {templateResolver} = context;\n\tif (templateResolver) {\n\t\tlet {templateName, fragmentName} = fragmentInfo;\n\t\tlet template = deserialize(await templateResolver(templateName));\n\t\treturn $(`[${dialectPrefix}\\\\:${NAME}^=\"${fragmentName}\"]`, template) ||\n\t\t\t\t\t $(`[data-${dialectPrefix}-${NAME}^=\"${fragmentName}\"]`, template);\n\t}\n\tconsole.log('No template resolver configured');\n\treturn null;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NAME as FragmentAttributeProcessorName} from './FragmentAttributeProcessor.js';\nimport AttributeProcessor                       from '../../processors/AttributeProcessor.js';\nimport {getThymeleafAttributeValue}             from '../../utilities/Dom.js';\nimport {extractFragment}                        from '../../utilities/Fragments.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'insert';\n\n/**\n * JS equivalent of Thymeleaf's `th:insert` attribute processor, inserts the\n * referenced template fragment as a child of the current element.\n * \n * @author Emanuel Rabina\n */\nexport default class InsertAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `insert` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:insert`/`data-th-insert` attribute,\n\t * replacing the current element's children with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\t\tclearChildren(element);\n\n\t\tlet fragmentInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (fragmentInfo) {\n\t\t\tlet fragment = await extractFragment(this.prefix, fragmentInfo, context);\n\t\t\tif (fragment) {\n\t\t\t\tlet fragmentSignature = getThymeleafAttributeValue(fragment, this.prefix, FragmentAttributeProcessorName);\n\t\t\t\tlet {parameterNames} = context.fragmentSignatureProcessor.process(fragmentSignature, context);\n\t\t\t\tif (parameterNames) {\n\t\t\t\t\tlet {parameters} = fragmentInfo;\n\t\t\t\t\tlet localContext = {};\n\t\t\t\t\tparameterNames.forEach((parameterName, index) => {\n\t\t\t\t\t\tlocalContext[parameterName] = parameters[parameterName] || parameters[index] || null;\n\t\t\t\t\t});\n\t\t\t\t\tfragment.__thymeleafLocalVariables = localContext;\n\t\t\t\t}\n\t\t\t\telement.appendChild(fragment);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * Configurable attribute processor that sets or removes an attribute on an\n * element if the result of its expression is truthy or falsey respectively.\n * \n * @author Emanuel Rabina\n */\nexport default class RemovableAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set the name of the attribute this processor will operate on.\n\t * \n\t * @param {string} prefix\n\t * @param {string} name\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, name, isomorphic) {\n\n\t\tsuper(prefix, name, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains the configured attribute to be worked\n\t * on, setting it if the expression resolves to a truthy value, or removing it\n\t * if it resolves to a falsey value.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet value = context.expressionProcessor.process(attributeValue, context);\n\t\tif (value) {\n\t\t\telement.setAttribute(this.name, value.toString());\n\t\t}\n\t\telse {\n\t\t\telement.removeAttribute(this.name);\n\t\t}\n\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n\nexport const REMOVABLE_ATTRIBUTE_NAMES = [\n\t'alt',\n\t'class'\n];\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'remove';\n\n/**\n * `th:remove`, used to remove the current element or select parts of it (and\n * its children).\n * \n * @author Emanuel Rabina\n */\nexport default class RemoveAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `remove` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:remove`/`data-th-remove`\n\t * attribute, removing the current element or parts of it based on the\n\t * attribute value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} Whether reprocessing behaviour needs to be applied, only\n\t *   when the current tag has been removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tswitch (attributeValue) {\n\t\t\tcase 'all':\n\t\t\t\telement.parentElement.removeChild(element);\n\t\t\t\treturn true;\n\t\t\tcase 'all-but-first':\n\t\t\t\twhile (element.lastElementChild !== element.firstElementChild) {\n\t\t\t\t\telement.removeChild(element.lastElementChild);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t}\n\t}\n}\n","/*\n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NAME as FragmentAttributeProcessorName} from './FragmentAttributeProcessor.js';\nimport AttributeProcessor                       from '../../processors/AttributeProcessor.js';\nimport {getThymeleafAttributeValue}             from '../../utilities/Dom.js';\nimport {extractFragment}                        from '../../utilities/Fragments.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'replace';\n\n/**\n * JS equivalent of Thymeleaf's `th:relace` attribute processor, replaces the\n * current element with the fragment referenced by the processor.\n * \n * @author Emanuel Rabina\n */\nexport default class ReplaceAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `replace` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:replace`/`data-th-replace`\n\t * attribute, replacing the current element with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\t\tclearChildren(element);\n\n\t\tlet fragmentInfo = context.expressionProcessor.process(attributeValue, context);\n\t\tif (fragmentInfo) {\n\t\t\tlet fragment = await extractFragment(this.prefix, fragmentInfo, context);\n\t\t\tif (fragment) {\n\t\t\t\tlet fragmentSignature = getThymeleafAttributeValue(fragment, this.prefix, FragmentAttributeProcessorName);\n\t\t\t\tlet {parameterNames} = context.fragmentSignatureProcessor.process(fragmentSignature, context);\n\t\t\t\tif (parameterNames) {\n\t\t\t\t\tlet {parameters} = fragmentInfo;\n\t\t\t\t\tlet localContext = {};\n\t\t\t\t\tparameterNames.forEach((parameterName, index) => {\n\t\t\t\t\t\tlocalContext[parameterName] = parameters[parameterName] || parameters[index] || null;\n\t\t\t\t\t});\n\t\t\t\t\tfragment.__thymeleafLocalVariables = localContext;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Can simplify this with insertAdjacent*(), but need to upgrade\n\t\t\t\t//       JSDOM first.\n\t\t\t\telement.parentElement.insertBefore(fragment, element);\n\t\t\t\telement.remove();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\telement.remove();\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Build a message string from a processed message expression.\n * \n * @param {object} messageInfo\n * @param {Function} messageResolver\n * @return {Promise<string>}\n */\nexport async function buildMessage(messageInfo, messageResolver) {\n\tif (messageResolver) {\n\t\tlet {key, parameters} = messageInfo;\n\t\treturn await messageResolver(key, parameters) || '';\n\t}\n\tconsole.log('No message resolver configured');\n\treturn null;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\nimport {buildMessage}     from '../../utilities/Messages.js';\n\nexport const NAME = 'text';\n\n/**\n * JS equivalent of Thymeleaf's `th:text` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed, escaping any unsafe input.\n * \n * @author Emanuel Rabina\n */\nexport default class TextAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `text` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:text` or `data-th-text` attribute\n\t * on it, taking the text expression in the value and applying it to the text\n\t * content of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tasync process(element, attribute, attributeValue, context) {\n\n\t\t// TODO: Move message constructon to the expression language?  Need to make\n\t\t//       all the executions async!\n\t\tlet messageResult = context.expressionProcessor.process(attributeValue, context);\n\t\telement.textContent =\n\t\t\ttypeof messageResult === 'object' ? await buildMessage(messageResult, context.messageResolver) :\n\t\t\tmessageResult;\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nimport {clearChildren} from '@ultraq/dom-utils';\n\nexport const NAME = 'unless';\n\n/**\n * JS equivalent of Thymeleaf's `th:unless` attribute processor, excludes or\n * includes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Robbie Bardijn\n */\nexport default class UnlessAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `unless` name and supplied prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:unless` or `data-th-unless` attribute\n\t * on it, evaluating the expression for falsey/truthy, excluding/rendering the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `true` if the element was removed.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = context.expressionProcessor.process(attributeValue, context);\n\t\tif (expressionResult) {\n\t\t\tclearChildren(element);\n\t\t\t// TODO: element.remove()?\n\t\t\telement.parentNode.removeChild(element);\n\t\t\treturn true;\n\t\t}\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'utext';\n\n/**\n * JS equivalent of Thymeleaf's `th:utext` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed.\n * \n * @author Emanuel Rabina\n */\nexport default class UTextAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `utext` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:utext` or `data-th-utext`\n\t * attribute on it, taking the text expression in the value and applying it to\n\t * the text content of the element.\n\t *\n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.innerHTML = context.expressionProcessor.process(attributeValue, context);\n\t\treturn super.process(element, attribute, attributeValue, context);\n\t}\n}\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\nexport const NAME = 'with';\n\n/**\n * `th:with`, used for creating scoped variables, useful for aliasing things.\n * \n * @author Emanuel Rabina\n */\nexport default class WithAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to use the `with` name and supplied\n\t * prefix.\n\t * \n\t * @param {string} prefix\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper(prefix, NAME, isomorphic);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:with`/`data-th-with` attribute,\n\t * setting a variable scoped to the current element with the given name.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `true` as adding new local variables needs to re-run\n\t *   processing.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tsuper.process(element, attribute, attributeValue, context);\n\n\t\tlet localVariables = {};\n\t\tlet aliases = context.expressionProcessor.process(attributeValue, context);\n\t\taliases.forEach(({name, value}) => {\n\t\t\tlocalVariables[name] = value;\n\t\t});\n\t\telement.__thymeleafLocalVariables = localVariables;\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2020, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor.js';\n\n/**\n * `xmlns:th`, used for removing the Thymeleaf XML namespace often added to HTML\n * files to satisfy the XML validators that are used to edit them.\n * \n * @author Emanuel Rabina\n */\nexport default class XmlNsAttributeProcessor extends AttributeProcessor {\n\n\t/**\n\t * Constructor, set this processor to operate on the given XML namespace.\n\t * \n\t * @param {string} prefix\n\t * @param {object} isomorphic\n\t */\n\tconstructor(prefix, isomorphic) {\n\n\t\tsuper('xmlns', prefix);\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Removes the XML namespace from an element.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {string} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {string} attributeValue\n\t *   The value given by the attribute.\n\t * @param {object} context\n\t * @return {boolean} `false`, as removing the XML namespace never requires\n\t *   repropcessing.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tif (this.isomorphic) {\n\t\t\telement.removeAttribute(`xmlns:${this.isomorphic.prefix}`);\n\t\t}\n\t\treturn false;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for dialects.\n * \n * @author Emanuel Rabina\n */\nexport default class Dialect {\n\n\t/**\n\t * Constructor, sets this dialect's name and optional prefix.\n\t * \n\t * @param {string} name\n\t * @param {string} [prefix]\n\t */\n\tconstructor(name, prefix) {\n\n\t\tthis.name   = name;\n\t\tthis.prefix = prefix;\n\t}\n\n\t/**\n\t * Return an object whose keys are the expression object names, the values the\n\t * expression object available properties and methods.\n\t * \n\t * @return {object}\n\t */\n\tget expressionObjects() {\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Return an array of processors.\n\t * \n\t * @return {Array}\n\t */\n\tget processors() {\n\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttrAttributeProcessor        from './processors/AttrAttributeProcessor.js';\nimport BlockElementProcessor         from './processors/BlockElementProcessor.js';\nimport CheckedAttributeProcessor     from './processors/CheckedAttributeProcessor.js';\nimport ClassAppendAttributeProcessor from './processors/ClassAppendAttributeProcessor.js';\nimport EachAttributeProcessor        from './processors/EachAttributeProcessor.js';\nimport EmptyableAttributeProcessor, {\n\tEMPTYABLE_ATTRIBUTE_NAMES\n}                                    from './processors/EmptyableAttributeProcessor.js';\nimport FragmentAttributeProcessor    from './processors/FragmentAttributeProcessor.js';\nimport IfAttributeProcessor          from './processors/IfAttributeProcessor.js';\nimport InsertAttributeProcessor      from './processors/InsertAttributeProcessor.js';\nimport RemovableAttributeProcessor, {\n\tREMOVABLE_ATTRIBUTE_NAMES\n}                                    from './processors/RemovableAttributeProcessor.js';\nimport RemoveAttributeProcessor      from './processors/RemoveAttributeProcessor.js';\nimport ReplaceAttributeProcessor     from './processors/ReplaceAttributeProcessor.js';\nimport TextAttributeProcessor        from './processors/TextAttributeProcessor.js';\nimport UnlessAttributeProcessor      from './processors/UnlessAttributeProcessor.js';\nimport UTextAttributeProcessor       from './processors/UTextAttributeProcessor.js';\nimport WithAttributeProcessor        from './processors/WithAttributeProcessor.js';\nimport XmlNsAttributeProcessor       from './processors/XmlNsAttributeProcessor.js';\nimport Dialect                       from '../dialects/Dialect.js';\n\nexport const NAME = 'Standard';\nexport const DEFAULT_PREFIX = 'thjs';\n\n/**\n * The out-of-the-box dialect for Thymeleaf, the \"Standard Dialect\".\n * \n * @author Emanuel Rabina\n */\nexport default class StandardDialect extends Dialect {\n\n\t/**\n\t * Create an instance of this dialect with the name \"Standard\" and given\n\t * prefix.\n\t * \n\t * @param {string} [prefix]\n\t * @param {object} [isomorphic]\n\t */\n\tconstructor(prefix = DEFAULT_PREFIX, isomorphic) {\n\n\t\tsuper(NAME, prefix);\n\t\tthis.isomorphic = isomorphic;\n\t}\n\n\t/**\n\t * Returns the supported standard processors.\n\t * \n\t * @return {Array} A list of the processors included in this dialect.\n\t */\n\tget processors() {\n\n\t\t// TODO: This is a very basic way of imposing the order of attribute\n\t\t//       processors.  It's currently ordered in the same way as OG\n\t\t//       Thymeleaf.  Figure out a 'proper' way to do the ordering.\n\n\t\t// Order taken from https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#attribute-precedence\n\t\tlet {prefix, isomorphic} = this;\n\t\treturn [\n\t\t\t// Fragment inclusion\n\t\t\tnew InsertAttributeProcessor(prefix, isomorphic),\n\t\t\tnew ReplaceAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment iteration\n\t\t\tnew EachAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Conditional evaluation\n\t\t\tnew IfAttributeProcessor(prefix, isomorphic),\n\t\t\tnew UnlessAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Local variable definition\n\t\t\tnew WithAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// General attribute modification\n\t\t\tnew AttrAttributeProcessor(prefix, isomorphic),\n\t\t\tnew ClassAppendAttributeProcessor(prefix, isomorphic),\n\t\t\t...EMPTYABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new EmptyableAttributeProcessor(prefix, attributeName, isomorphic);\n\t\t\t}),\n\t\t\t...REMOVABLE_ATTRIBUTE_NAMES.map(attributeName => {\n\t\t\t\treturn new RemovableAttributeProcessor(prefix, attributeName, isomorphic);\n\t\t\t}),\n\n\t\t\t// Specific attribute modification\n\t\t\tnew CheckedAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Text\n\t\t\tnew TextAttributeProcessor(prefix, isomorphic),\n\t\t\tnew UTextAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment specification\n\t\t\tnew FragmentAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Fragment removal\n\t\t\tnew RemoveAttributeProcessor(prefix, isomorphic),\n\n\t\t\t// Element processors\n\t\t\tnew BlockElementProcessor(prefix),\n\n\t\t\t// Misc\n\t\t\tnew XmlNsAttributeProcessor(prefix, isomorphic)\n\t\t];\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StandardDialect from './standard/StandardDialect.js';\n\n/**\n * Configuration object for the template engine.\n * \n * @typedef {object} Configuration\n * @property {Array<Dialect>} dialects\n *   A list of dialects to include with this instance of the template engine.\n * @property {object} [isomorphic]\n *   An object which configures the isomorphic capabilities of the template\n *   engine.\n * @property {Function} messageResolver\n *   A function for building a message string from some external source, given a\n *   message key and optional parameters for that particular message.\n * @property {Function} templateResolver\n *   A function for returning the text of templates named by fragment\n *   expressions in templates.  Is given only 1 argument, the template name from\n *   a fragment expression, and should return a Promise of the template text.\n */\n\n/**\n * Default configuration for the template engine, configures the standard\n * dialect with no options (uses `thjs` as the prefix).\n * \n * @type {Configuration}\n */\nexport const DEFAULT_CONFIGURATION = {\n\tdialects: [\n\t\tnew StandardDialect()\n\t]\n};\n\n/**\n * Standard configuration, configures the standard dialect with the `th` prefix\n * and enables isomorphic mode which enables the ability to use much of the same\n * processors across original Thymeleaf and ThymeleafJS.\n * \n * @type {Configuration}\n */\nexport const STANDARD_CONFIGURATION = {\n\t...DEFAULT_CONFIGURATION,\n\tdialects: [\n\t\tnew StandardDialect('th', {\n\t\t\tprefix: 'thjs'\n\t\t})\n\t]\n};\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from './AttributeProcessor.js';\nimport ElementProcessor   from './ElementProcessor.js';\n\n/**\n * Class for determining if an element contains a processor on it.\n * \n * @author Emanuel Rabina\n */\nexport default class Matcher {\n\n\t/**\n\t * Return the matching attribute or element that a processor can work over.\n\t * \n\t * @param {Element} element\n\t * @param {AttributeProcessor} processor\n\t * @return {string}\n\t *   A match result containing what was matched (either an attribute or an\n\t *   element, relevant to the processor being tested), or `null` if nothing\n\t *   was matched.\n\t */\n\tmatches(element, processor) {\n\n\t\tlet {isomorphic, name, prefix} = processor;\n\n\t\t// Attribute processor matching, can be of the name prefix:name or data-prefix-name\n\t\tif (processor instanceof AttributeProcessor) {\n\t\t\tlet prefixes = [prefix];\n\t\t\tif (isomorphic) {\n\t\t\t\tprefixes.unshift(isomorphic.prefix);\n\t\t\t}\n\t\t\tfor (let prefix of prefixes) {\n\t\t\t\tlet attribute;\n\t\t\t\tattribute = `${prefix}:${name}`;\n\t\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\t\treturn attribute;\n\t\t\t\t}\n\t\t\t\tattribute = `data-${prefix}-${name}`;\n\t\t\t\tif (element.hasAttribute(attribute)) {\n\t\t\t\t\treturn attribute;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Element processor, can only be of the name prefix:name\n\t\telse if (processor instanceof ElementProcessor) {\n\t\t\tlet elementName = `${processor.prefix}:${name}`;\n\t\t\tif (element.tagName === elementName.toUpperCase()) {\n\t\t\t\treturn elementName;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wrapper around the string being parsed, with a position that keeps track of\n * what part of the imput is currently being read/tested.\n * \n * @author Emanuel Rabina\n */\nexport default class InputBuffer {\n\n\t/**\n\t * @private\n\t * @type {number}\n\t */\n\tposition = 0;\n\n\t/**\n\t * @private\n\t * @type {Array<number>}\n\t */\n\tpositionStack = [];\n\n\t/**\n\t * @param {string} input\n\t */\n\tconstructor(input) {\n\n\t\tthis.input = input;\n\t}\n\n\t/**\n\t * Clear the previously {@link #mark}ed position.\n\t */\n\tclear() {\n\n\t\tlet lastPosition = this.positionStack.pop();\n\t\tif (lastPosition === undefined) {\n\t\t\tthrow new Error('Called clear() but no matching mark()');\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether or not the current position is at the end of the input,\n\t * meaning we've exhausted the entire input string.\n\t * \n\t * @return {boolean}\n\t */\n\texhausted() {\n\n\t\treturn this.position === this.input.length;\n\t}\n\n\t/**\n\t * Sets a mark at the current position so that it can be returned to by a\n\t * matching {@link #reset} call.\n\t */\n\tmark() {\n\n\t\tthis.positionStack.push(this.position);\n\t}\n\n\t/**\n\t * Convenience method for surrounding a function with a call to {@link #mark},\n\t * then {@link #clear} if the result of the function is non-null, or\n\t * {@link #reset} if `null`.\n\t * \n\t * @template T\n\t * @param {Function<T>} func\n\t * @return {T}\n\t */\n\tmarkAndClearOrReset(func) {\n\n\t\tthis.mark();\n\t\tlet result = func();\n\t\tif (result !== null) {\n\t\t\tthis.clear();\n\t\t\treturn result;\n\t\t}\n\t\tthis.reset();\n\t\treturn null;\n\t}\n\n\t/**\n\t * Reads as many characters from the current position as satisfies the given\n\t * pattern, returning the read characters and advancing the mark by as many\n\t * characters.\n\t * \n\t * @param {RegExp} pattern\n\t * @return {Array} The array of matched strings, or `null` if the pattern\n\t *   didn't match.\n\t */\n\tread(pattern) {\n\n\t\tlet remaining = this.input.substring(this.position);\n\t\tlet leadingWhitespace = remaining.match(/^\\s+/);\n\t\tif (leadingWhitespace) {\n\t\t\tleadingWhitespace = leadingWhitespace[0];\n\t\t\tremaining = remaining.substring(leadingWhitespace.length);\n\t\t}\n\t\tlet result = new RegExp(pattern.source).exec(remaining);\n\t\tif (result) {\n\t\t\tlet [value] = result;\n\t\t\tif (remaining.startsWith(value)) {\n\t\t\t\tthis.position += (value.length + (leadingWhitespace ? leadingWhitespace.length : 0));\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Revert to the last @{link #mark}ed position.\n\t */\n\treset() {\n\n\t\tlet newPosition = this.positionStack.pop();\n\t\tif (newPosition === undefined) {\n\t\t\tthrow new Error('Called reset() but no matching mark()');\n\t\t}\n\t\tthis.position = newPosition;\n\t}\n}\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * Any one of the objects that can be matched:\n *  - an expression function\n *  - a string that references another rule\n *  - a regular expression\n * \n * @typedef {string | RegExp | Function} Matchable\n */\n\n/**\n * A recursive descent parser for any parsing expression grammar defined by the\n * constructs in this module.\n * \n * TODO: Own module?\n * \n * @author Emanuel Rabina\n */\nexport default class Parser {\n\n\texpressionStack = [];\n\n\t/**\n\t * @param {Grammar} grammar\n\t */\n\tconstructor(grammar) {\n\n\t\tthis.grammar = grammar;\n\t}\n\n\t/**\n\t * Parse a string, attempting to build the parse tree defined by the rules in\n\t * the configured grammar.  Parsing is considered successful when there are no\n\t * more non-terminating symbols in the grammar and all of the input has been\n\t * read.\n\t * \n\t * @param {string} input\n\t * @return {object} The parse tree if the input could be parsed, `null`\n\t *   otherwise.\n\t */\n\tparse(input) {\n\n\t\tlet inputBuffer = new InputBuffer(input);\n\t\tlet matchResult = this.grammar.accept(inputBuffer, this);\n\t\tif (matchResult === null || !inputBuffer.exhausted()) {\n\t\t\tlet errorMessage = `Failed to parse \"${input}\"`;\n\n\t\t\t// Don't bring down the thread if we can't parse\n\t\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\t\tconsole.error(errorMessage);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\t\t}\n\t\treturn matchResult;\n\t}\n\n\t/**\n\t * Parse the input against the given expression.  An expression can either be\n\t * a reference to another rule in the current grammar, or a regular expression\n\t * that consumes input.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Matchable} expression\n\t * @return {object}\n\t */\n\tparseWithExpression(input, expression) {\n\n\t\t// Name of another rule in the grammar\n\t\tif (typeof expression === 'string') {\n\t\t\tlet rule = this.grammar.findRuleByName(expression);\n\t\t\treturn rule ? rule.accept(input, this) : null;\n\t\t}\n\n\t\t// A regular expression that must be matched\n\t\telse if (expression instanceof RegExp) {\n\t\t\tlet result = input.read(expression);\n\t\t\tif (result) {\n\t\t\t\treturn result[0];\n\t\t\t}\n\t\t}\n\n\t\t// An expression function to be executed\n\t\telse if (typeof expression === 'function') {\n\t\t\treturn expression(input, this);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Surrounds a function that evaluates an expression with tracking it against\n\t * the current stack.  Useful for knowing how the current expression was\n\t * arrived at through the grammar's rules.\n\t * \n\t * @template T\n\t * @param {InputBuffer} input\n\t * @param {Matchable} expression\n\t * @param {string} name\n\t * @param {Function<T>} func\n\t * @return {T}\n\t */\n\ttrackExpression(input, expression, name, func) {\n\n\t\tlet stackSize = this.expressionStack.push({\n\t\t\tname,\n\t\t\texpression: typeof expression !== 'function' ? expression.toString() : null,\n\t\t\tinput: input.input.substring(input.position)\n\t\t});\n\t\tlet result = func();\n\t\tif (result !== null) {\n\t\t\treturn result;\n\t\t}\n\t\tthis.expressionStack.splice(stackSize - 1);\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Parser from '../../parser/Parser.js';\n\n/**\n * Parses and executes Thymeleaf expressions.\n * \n * TODO: Create a shared instance of this for a processing context so that it\n *       doesn't need to be recreated over and over.\n * \n * @author Emanuel Rabina\n */\nexport default class ExpressionProcessor {\n\n\t/**\n\t * Constructor, create a new processor that can parse/execute a string in the\n\t * given grammar.\n\t * \n\t * @param {Grammar} grammar\n\t */\n\tconstructor(grammar) {\n\n\t\tthis.parser = new Parser(grammar);\n\t}\n\n\t/**\n\t * Parse and execute the given input as a Thymeleaf expression.\n\t * \n\t * @param {string} input\n\t * @param {object} [context]\n\t * @return {*}\n\t */\n\tprocess(input, context = {}) {\n\n\t\tlet expression = this.parser.parse(input);\n\t\treturn expression?.({\n\t\t\t...context,\n\t\t\texpression: input\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A special kind of expression that requires the referenced rule consume all\n * available input.\n * \n * @param {string} ruleName\n * @return {Matchable}\n */\nexport const AllInput = ruleName => (input, parser) => {\n\tlet matchResult = parser.parseWithExpression(input, ruleName);\n\treturn matchResult !== null && input.exhausted() ? matchResult : null;\n};\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Default processor which returns the result as is.\n * \n * @template T\n * @param {T} result\n * @return {T}\n */\nconst defaultMatchProcessor = result => result;\n\n/**\n * A rule describes a string in the language.\n * \n * @author Emanuel Rabina\n */\nexport default class Rule {\n\n\t/**\n\t * @param {string} name\n\t * @param {object} expression\n\t * @param {Function} [matchProcessor]\n\t */\n\tconstructor(name, expression, matchProcessor = defaultMatchProcessor) {\n\n\t\tthis.name           = name;\n\t\tthis.expression     = expression;\n\t\tthis.matchProcessor = matchProcessor;\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this rule.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rule.\n\t */\n\taccept(input, parser) {\n\n\t\tlet {expression, name} = this;\n\t\treturn parser.trackExpression(input, expression, name, () => {\n\t\t\tlet matchResult = parser.parseWithExpression(input, expression);\n\t\t\treturn matchResult !== null ? this.matchProcessor(matchResult) : null;\n\t\t});\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Rule from '../../parser/Rule.js';\n\n/**\n * A custom rule where the default match processor returns a function to execute\n * against the current context to discover the matched value.\n */\nexport default class ThymeleafRule extends Rule {\n\n\t/**\n\t * @param {string} name\n\t * @param {object} expression\n\t * @param {Function} [matchProcessor]\n\t */\n\tconstructor(name, expression, matchProcessor) {\n\n\t\tconst contextSensitiveMatchProcessor = result => (...args) => {\n\t\t\t// console.log(`Processing rule: ${name}`);\n\t\t\treturn typeof result === 'function' ? result.apply(null, args) : result;\n\t\t};\n\t\tsuper(name, expression, matchProcessor || contextSensitiveMatchProcessor);\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A collection of Rules that describes a language.\n * \n * @author Emanuel Rabina\n */\nexport default class Grammar {\n\n\t/**\n\t * @param {string} name\n\t * @param {Rule} startingRule\n\t * @param {...Rule} additionalRules\n\t */\n\tconstructor(name, startingRule, ...additionalRules) {\n\n\t\tthis.name = name;\n\t\tthis.rules = [].concat(startingRule, additionalRules);\n\t}\n\n\t/**\n\t * Given an input string and a parser, return whether or not the input is\n\t * accepted by this grammar.\n\t * \n\t * @param {InputBuffer} input\n\t * @param {Parser} parser\n\t * @return {object} If the input is accepted, this will be the non-null result\n\t *   of matching against the rules of this grammar.\n\t */\n\taccept(input, parser) {\n\n\t\treturn this.startingRule.accept(input, parser);\n\t}\n\n\t/**\n\t * Return the rule that has the given name.\n\t * \n\t * @param {string} name\n\t * @return {Rule}\n\t */\n\tfindRuleByName(name) {\n\n\t\tlet rule = this.rules.find(rule => rule.name === name);\n\t\tif (!rule) {\n\t\t\tthrow new Error(`Failed to find a rule named \"${name}\" in the grammar`);\n\t\t}\n\t\treturn rule;\n\t}\n\n\t/**\n\t * Returns the grammar's starting rule.\n\t * \n\t * @return {Rule}\n\t */\n\tget startingRule() {\n\n\t\treturn this.rules[0];\n\t}\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an expression function where the underlying expression doesn't need\n * to be matched.  Thus, optional expressions \"always\" match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const Optional = expression => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet result = parser.parseWithExpression(input, expression);\n\t\treturn result !== null ? result : '';\n\t});\n};\n\n/**\n * Returns an expression function where the expression must be matched against\n * at least once to be considered a match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const OneOrMore = (expression) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\twhile (true) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result) {\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn results.length > 0 ? results : null;\n\t});\n};\n\n/**\n * Returns an expression function where only one of the underlying expressions\n * must be matched in order to consider the expression a match.\n * \n * @param {...Matchable} expressions\n * @return {Matchable}\n */\nexport const OrderedChoice = (...expressions) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tfor (let expression of expressions) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result !== null) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t});\n};\n\n/**\n * Returns an expression whose underlying expressions must be matched in order\n * to consider the entire expression a match.\n * \n * @param {...Matchable} expressions\n * @return {Matchable}\n */\nexport const Sequence = (...expressions) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\tfor (let expression of expressions) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresults.push(result);\n\t\t}\n\t\treturn results;\n\t});\n};\n\n/**\n * Returns an expression function where the expression can be matched a repeated\n * number of times or none at all to be considered a match.\n * \n * @param {Matchable} expression\n * @return {Matchable}\n */\nexport const ZeroOrMore = (expression) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet results = [];\n\t\twhile (true) {\n\t\t\tlet result = input.markAndClearOrReset(() => {\n\t\t\t\treturn parser.parseWithExpression(input, expression);\n\t\t\t});\n\t\t\tif (result) {\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t});\n};\n","/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AllInput}                       from './AllInput.js';\nimport ThymeleafRule                    from './ThymeleafRule.js';\nimport Grammar                          from '../../parser/Grammar.js';\nimport {Optional, Sequence, ZeroOrMore} from '../../parser/Operators.js';\n\nimport {flatten} from '@ultraq/array-utils';\n\n/**\n * Grammar for Thymeleaf fragment signatures.  This is separate from the\n * expression language as these are not expressions, but rather marker syntaxes.\n * \n * @author Emanuel Rabina\n */\nexport default new Grammar('Thymeleaf fragment signature',\n\n\tnew ThymeleafRule('ThymeleafFragmentSignatureRule',\n\t\tAllInput('FragmentSignature')\n\t),\n\n\t/**\n\t * The target end of a fragment expression, contains the fragment name and\n\t * optional parameter names.\n\t */\n\tnew ThymeleafRule('FragmentSignature',\n\t\tSequence('FragmentName', Optional('FragmentParameters')),\n\t\t([fragmentName, parameterNames]) => context => {\n\t\t\treturn {\n\t\t\t\tfragmentName: fragmentName(context),\n\t\t\t\tparameterNames: parameterNames ? parameterNames(context) : null\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentName', /[\\w-._]+/),\n\tnew ThymeleafRule('FragmentParameters',\n\t\tSequence(/\\(/, ZeroOrMore('FragmentParameterNames'), /\\)/),\n\t\t([, [parameterNames]]) => context => {\n\t\t\treturn parameterNames(context);\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentParameterNames',\n\t\tSequence('Identifier', ZeroOrMore(Sequence(/,/, 'Identifier'))),\n\t\t(namesAndSeparators) => context => {\n\t\t\treturn namesAndSeparators ?\n\t\t\t\tflatten(namesAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(name => name(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\n\t// Common language basics\n\t// ======================\n\n\tnew ThymeleafRule('Identifier', /[#a-zA-Z_][\\w]*/)\n);\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport InputBuffer from './InputBuffer';\n\n/**\n * A special kind of expression that understands matched portions of regular\n * expressions to run processing over, which may lead to additional parsing\n * expressions.\n * \n * This expression should be used sparingly as the regexes within need to take\n * care of whitespace between tokens themselves, which can be annoying.\n * \n * @param {RegExp} expression\n * @param {Array<Matchable>} matchers\n * @return {Matchable}\n */\nexport const RegularExpression = (expression, matchers) => (input, parser) => {\n\treturn input.markAndClearOrReset(() => {\n\t\tlet result = input.read(expression);\n\t\tif (result) {\n\t\t\tlet parseResults = [result[0]];\n\t\t\tfor (let i = 1; i < result.length; i++) {\n\t\t\t\tlet match = result[i];\n\t\t\t\tif (match !== undefined) {\n\t\t\t\t\tlet parseResult = parser.parseWithExpression(new InputBuffer(match), matchers[i - 1]);\n\t\t\t\t\tif (parseResult === null) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tparseResults.push(parseResult);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parseResults;\n\t\t}\n\t\treturn null;\n\t});\n};\n","/**\n *\n * @param {object|Array} obj\n * @param {string} path\n * @return {*}\n */\nexport function getByPath(obj, path) {\n\tconst paths = getPathArray(path);\n\tlet requestedObject = Array.isArray(obj) ? [...obj] : {...obj};\n\n\tfor (let i = 0; i < paths.length; i++) {\n\t\ttry {\n\t\t\tif (requestedObject[paths[i]] === undefined) {\n\t\t\t\trequestedObject = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\trequestedObject = requestedObject[paths[i]];\n\t\t}\n\t\tcatch (e) {\n\t\t\trequestedObject = null;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn requestedObject;\n}\n\n/**\n * Helper function to convert array like path string into array\n *\n * @param {string} path\n * @return {Array<string>}\n */\nexport function getPathArray(path) {\n\treturn path.split('.').reduce((acc, el) => {\n\t\treturn acc.concat(el.replace(/[\"']/g, '')\n\t\t\t.split('[')\n\t\t\t.filter(i => i !== '')\n\t\t\t.map(i => i.replace(']', '')));\n\t}, []);\n}\n","/* \n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AllInput}          from './AllInput.js';\nimport ExpressionProcessor from './ExpressionProcessor.js';\nimport ThymeleafRule       from './ThymeleafRule.js';\nimport Grammar             from '../../parser/Grammar.js';\nimport {\n\tOptional,\n\tOneOrMore,\n\tOrderedChoice,\n\tSequence,\n\tZeroOrMore\n}                          from '../../parser/Operators.js';\nimport {RegularExpression} from '../../parser/RegularExpression.js';\nimport {getByPath}       from '../../utilities/getByPath';\n\nimport {flatten, remove} from '@ultraq/array-utils';\n\n// For helping identify rules that return objects\nconst METADATA_FRAGMENT  = 'fragment';\nconst METADATA_ITERATION = 'iteration';\nconst METADATA_MESSAGE   = 'message';\n\n/**\n * Grammar for the Thymeleaf expression language.  Describes the language and\n * how to parse it.\n * \n * @author Emanuel Rabina\n */\nconst ThymeleafExpressionLanguage = new Grammar('Thymeleaf Expression Language',\n\n\t// Ordered as at https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\n\tnew ThymeleafRule('ThymeleafExpression',\n\t\tOrderedChoice(\n\t\t\tAllInput('VariableExpression'),\n\t\t\tAllInput('MessageExpression'),\n\t\t\tAllInput('LinkExpression'),\n\t\t\tAllInput('FragmentExpression'),\n\t\t\tAllInput('Iteration'),\n\t\t\tAllInput('StringConcatenation'),\n\t\t\tAllInput('ScopedVariables'),\n\t\t\tAllInput('Literal'),\n\t\t\tAllInput('LogicalExpression'),\n\t\t\tAllInput('IfThenCondition'),\n\t\t\tAllInput('IfThenElseCondition'),\n\t\t\tAllInput('TokenLiteral'),\n\t\t\tAllInput('Nothing')\n\t\t)\n\t),\n\n\n\t// Simple expressions\n\t// ==================\n\n\t/**\n\t * Variable expressions, `${variable}`.  Represents a value to be retrieved\n\t * from the current context.  Also is an entry into the underlying expression\n\t * language, so this part often extends to do what OGNL (and thus SpEL) can\n\t * do.\n\t */\n\n\tnew ThymeleafRule('VariableExpression',\n\t\tSequence(/\\${/, 'Chain', /\\}/),\n\t\t([, chain]) => context => {\n\t\t\tlet result = chain(context);\n\t\t\treturn result !== null && result !== undefined ? result : '';\n\t\t}\n\t),\n\tnew ThymeleafRule('Chain',\n\t\tSequence(Optional('Negation'), 'ChainLink', ZeroOrMore(Sequence(/\\./, 'ChainLink'))),\n\t\t([negation, ...chain]) => context => {\n\t\t\tlet result = flatten(chain).filter(link => link !== '.').reduce((linkContext, nextLink) => {\n\t\t\t\tif (linkContext === null || linkContext === undefined) {\n\t\t\t\t\treturn linkContext;\n\t\t\t\t}\n\t\t\t\treturn nextLink(linkContext, context);\n\t\t\t}, context);\n\t\t\t// TODO: Need a better way of applying negation - this fails when I\n\t\t\t//       introduce the 'not' keyword\n\t\t\treturn typeof negation === 'function' ? !result : result;\n\t\t}\n\t),\n\tnew ThymeleafRule('ChainLink',\n\t\tOrderedChoice('MethodCall', 'ArrayIndex', 'PropertyName', 'Literal')\n\t),\n\n\t/**\n\t * Message expressions, `#{messageKey(parameters)}`.  Used for referencing\n\t * text from a resource file, often for localization purposes.\n\t */\n\tnew ThymeleafRule('MessageExpression',\n\t\tSequence(/#{/, 'MessageKey', Optional(Sequence(/\\(/, Sequence('Expression', ZeroOrMore(Sequence(/,/, 'Expression'))), /\\)/)), /}/),\n\t\t([, messageKey, [, messageParameters]]) => context => {\n\t\t\treturn {\n\t\t\t\ttype: METADATA_MESSAGE,\n\t\t\t\tkey: messageKey(context),\n\t\t\t\tparameters: messageParameters ?\n\t\t\t\t\tflatten(messageParameters)\n\t\t\t\t\t\t.filter(messageParameter => typeof messageParameter === 'function')\n\t\t\t\t\t\t.map(messageParameter => messageParameter(context)) :\n\t\t\t\t\tnull\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('MessageKey', /[\\w.-]+/),\n\n\t/**\n\t * Link expressions, `@{url(parameters)}`.  Used for generating URLs out of\n\t * context parameters.\n\t * \n\t * TODO: Change this to use the other expression types so I can remove this\n\t *       bespoke operator.\n\t */\n\tnew ThymeleafRule('LinkExpression',\n\t\tRegularExpression(/^@\\{(.+?)(\\(.+\\))?\\}$/, ['Url', 'UrlParameters']),\n\t\t([, urlFunc, parameters]) => context => {\n\n\t\t\tlet url = urlFunc(context);\n\t\t\tif (parameters) {\n\n\t\t\t\t// TODO: Push this parsing of the parameters list back into the grammar\n\t\t\t\tlet expressionProcessor = new ExpressionProcessor(ThymeleafExpressionLanguage);\n\t\t\t\tlet paramsList = parameters(context).slice(1, -1).split(',').map(param => {\n\t\t\t\t\tlet [lhs, rhs] = param.split('=');\n\t\t\t\t\treturn [lhs, expressionProcessor.process(rhs, context)];\n\t\t\t\t});\n\n\t\t\t\t// Fill out any placeholders in the URL from the parameters\n\t\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\t\tlet urlTemplate = /(.*?)\\{(.+?)\\}(.*)/.exec(url);\n\t\t\t\t\tif (urlTemplate) {\n\t\t\t\t\t\tlet [, head, placeholder, tail] = urlTemplate;\n\t\t\t\t\t\tlet paramEntry = remove(paramsList, ([lhs]) => lhs === placeholder);\n\t\t\t\t\t\tif (paramEntry) {\n\t\t\t\t\t\t\turl = `${head}${paramEntry[1]}${tail}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Remaining parameters become search query parameters\n\t\t\t\tif (paramsList.length) {\n\t\t\t\t\turl += `?${paramsList.map(([key, value]) => `${key}=${value}`).join('&')}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t),\n\tnew ThymeleafRule('Url', /.+/),\n\tnew ThymeleafRule('UrlParameters', /\\((.+)\\)/),\n\n\t/**\n\t * Fragment expressions, `~{template :: fragment(parameters)}`.  A locator for\n\t * a piece of HTML in the same or another template.\n\t */\n\tnew ThymeleafRule('FragmentExpression',\n\t\tSequence(/~{/, 'TemplateName', /::/, 'FragmentName', Optional('FragmentParametersSection'), /}/),\n\t\t([, templateName, , fragmentName, parameters]) => context => {\n\n\t\t\t// TODO: Should executing a fragment expression locate and return the\n\t\t\t//       fragment?  If so, then it'll make expression execution\n\t\t\t//       asynchronous!\n\t\t\treturn {\n\t\t\t\ttype: METADATA_FRAGMENT,\n\t\t\t\ttemplateName: templateName(context),\n\t\t\t\tfragmentName: fragmentName(context),\n\t\t\t\tparameters: parameters ? parameters(context) : null\n\t\t\t};\n\t\t}\n\t),\n\tnew ThymeleafRule('TemplateName',\n\t\tOrderedChoice(\n\t\t\t/[\\w-._/]+/,\n\t\t\t'VariableExpression'\n\t\t)\n\t),\n\tnew ThymeleafRule('FragmentName', /[\\w-._]+/),\n\tnew ThymeleafRule('FragmentParametersSection',\n\t\tSequence(/\\(/, Optional('FragmentParameters'), /\\)/),\n\t\t([, parameters]) => context => {\n\t\t\treturn parameters(context);\n\t\t}\n\t),\n\tnew ThymeleafRule('FragmentParameters',\n\t\tSequence('Expression', ZeroOrMore(Sequence(/,/, 'Expression'))),\n\t\t(expressionsAndSeparators) => context => {\n\t\t\treturn expressionsAndSeparators ?\n\t\t\t\tflatten(expressionsAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(expressions => expressions(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\n\t// Complex expressions\n\t// ===================\n\n\t/**\n\t * Iteration, `localVar : ${collection}`.  The name of the variable for each\n\t * loop, followed by the collection being iterated over.\n\t */\n\tnew ThymeleafRule('Iteration',\n\t\tSequence('Identifier', Optional(Sequence(/,/, 'Identifier')), /:/, 'VariableExpression'),\n\t\t([localValueName, [, iterationStatusVariable], , collectionExpressionAction]) => context => ({\n\t\t\ttype: METADATA_ITERATION,\n\t\t\tlocalValueName: localValueName(context),\n\t\t\titerable: collectionExpressionAction(context),\n\t\t\titerationStatusVariable: iterationStatusVariable ? iterationStatusVariable(context) : null\n\t\t})\n\t),\n\n\t/**\n\t * Scoped variable aliases, `key=${expression},...`, describes one or more\n\t * names for scoped variables with the expressions that can be their values.\n\t */\n\tnew ThymeleafRule('ScopedVariables',\n\t\tSequence('ScopedVariable', ZeroOrMore(Sequence(/,/, 'ScopedVariable'))),\n\t\t(aliases) => context => {\n\t\t\treturn flatten(aliases).map(alias => alias(context));\n\t\t}\n\t),\n\tnew ThymeleafRule('ScopedVariable',\n\t\tSequence('Identifier', /=/, 'Expression'),\n\t\t([name, , expression]) => context => ({\n\t\t\tname: name(context),\n\t\t\tvalue: expression(context)\n\t\t})\n\t),\n\n\t// Literals\n\t// ========\n\n\tnew ThymeleafRule('Literal',\n\t\tOrderedChoice(\n\t\t\t'StringLiteral',\n\t\t\t'NumberLiteral',\n\t\t\t'BooleanLiteral',\n\t\t\t'NullLiteral'\n\t\t)\n\t),\n\n\t/**\n\t * String literal, characters surrounded by `'` (single quotes).\n\t * \n\t * The first part is attempting to match an empty string as the second part\n\t * doesn't work on empty strings.\n\t * \n\t * The second part is trying to emulate negative lookbehind so that escaped\n\t * quotes don't get counted as string terminators, but JavaScript only got\n\t * that feature in ES2018, so if I used it it'd leave too many JS engines\n\t * without support.\n\t */\n\tnew ThymeleafRule('StringLiteral', /''|'.*?(?!\\\\').'/, result => () => result.slice(1, -1).replace(/\\\\/g, '')),\n\n\t/**\n\t * A number.\n\t */\n\tnew ThymeleafRule('NumberLiteral', /\\d+(\\.\\d+)?/, result => () => parseFloat(result)),\n\n\t/**\n\t * One of `true` or `false`.\n\t */\n\tnew ThymeleafRule('BooleanLiteral', /(true|false)/, result => () => result === 'true'),\n\n\t/**\n\t * The word `null` to represent the null value.\n\t */\n\t// TODO: The parser uses null to mean 'failed parse', so this might not work?\n\tnew ThymeleafRule('NullLiteral', /null/, () => () => null),\n\n\t/**\n\t * A token literal, which is pretty much anything else that can't be categorized\n\t * by the other literal types.  This is often used as a fallback in the\n\t * expression language so that, for any unknown input, we're still returning\n\t * something.\n\t */\n\tnew ThymeleafRule('TokenLiteral', /[^: ${}]+/, result => () => result),\n\n\n\t// Text operations\n\t// ===============\n\n\n\t/**\n\t * String concatenation, `'...' + '...'` or even `${...} + ${...}`, the\n\t * joining of 2 expressions by way of the `+` operator.\n\t */\n\tnew ThymeleafRule('StringConcatenation',\n\t\tSequence('Concatenatable', OneOrMore(Sequence(/\\+/, 'Concatenatable'))),\n\t\t(values) => context => {\n\t\t\treturn flatten(values).filter(item => item !== '+').reduce((result, value) => {\n\t\t\t\treturn result + (typeof value === 'function' ? value(context) : value);\n\t\t\t}, '');\n\t\t}\n\t),\n\tnew ThymeleafRule('Concatenatable',\n\t\tOrderedChoice(\n\t\t\t'StringLiteral',\n\t\t\t'VariableExpression'\n\t\t)\n\t),\n\n\tnew ThymeleafRule('LiteralSubstitution', Sequence(/^\\|/, OneOrMore(Sequence(/[^$|]*/, 'VariableExpression', /[^$|]*/)), /\\|$/), ([, matchers]) => context => {\n\t\treturn flatten(matchers).reduce((curr, acc) => {\n\t\t\tif (typeof acc === 'string') {\n\t\t\t\treturn curr + acc;\n\t\t\t}\n\t\t\treturn curr + acc(context);\n\t\t}, '');\n\t}),\n\n\n\t// Arithmetic operations\n\t// =====================\n\n\n\t// Boolean operations\n\t// ==================\n\n\tnew ThymeleafRule('LogicalOperation',\n\t\tOrderedChoice('LogicalAndOperation', 'LogicalOrOperation')\n\t),\n\tnew ThymeleafRule('LogicalAndOperation',\n\t\tSequence('Expression', 'LogicalAndOperator', 'Expression'),\n\t\t([leftOperand, , rightOperand]) => context => {\n\t\t\tlet lhs = leftOperand(context);\n\t\t\tlet rhs = rightOperand(context);\n\t\t\treturn lhs && rhs;\n\t\t}\n\t),\n\tnew ThymeleafRule('LogicalAndOperator',\n\t\tOrderedChoice(/&&/, /and/)\n\t),\n\tnew ThymeleafRule('LogicalOrOperation',\n\t\tSequence('Expression', 'LogicalOrOperator', 'Expression'),\n\t\t([leftOperand, , rightOperand]) => context => {\n\t\t\tlet lhs = leftOperand(context);\n\t\t\tlet rhs = rightOperand(context);\n\t\t\treturn lhs || rhs;\n\t\t}\n\t),\n\tnew ThymeleafRule('LogicalOrOperator',\n\t\tOrderedChoice(/\\|\\|/, /or/)\n\t),\n\n\tnew ThymeleafRule('Negation', /!/),\n\n\n\t// Comparisons and equality\n\t// ========================\n\n\t/**\n\t * An operation for comparing the equality of each side of the operator.\n\t */\n\tnew ThymeleafRule('EqualityOperation',\n\t\tSequence('Expression', 'EqualityOperator', 'Expression'),\n\t\t([leftOperand, operator, rightOperand]) => context => {\n\t\t\tlet lhs = leftOperand(context);\n\t\t\tlet rhs = rightOperand(context);\n\t\t\tswitch (operator(context)) {\n\t\t\t\tcase '==':  return lhs == rhs; // eslint-disable-line\n\t\t\t\tcase 'eq':\n\t\t\t\tcase '===': return lhs === rhs;\n\t\t\t\tcase '!=':  return lhs != rhs; // eslint-disable-line\n\t\t\t\tcase 'ne':\n\t\t\t\tcase '!==': return lhs !== rhs;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t),\n\tnew ThymeleafRule('EqualityOperator',\n\t\tOrderedChoice(/[=!]==?/, /eq/, /ne/)\n\t),\n\n\n\t// Conditional operators\n\t// =====================\n\n\t/**\n\t * A logical expression is any expression that resolves to a `true`/`false`\n\t * value.\n\t */\n\tnew ThymeleafRule('LogicalExpression',\n\t\tOrderedChoice(\n\t\t\t'EqualityOperation',\n\t\t\t'LogicalOperation',\n\t\t\t'Expression'\n\t\t)\n\t),\n\n\t/**\n\t * If-then condition, `if ? then`.  This is the truthy branch only of the\n\t * classic ternary operator.  The falsey branch is a no-op.\n\t */\n\tnew ThymeleafRule('IfThenCondition',\n\t\tSequence('LogicalExpression', /\\?/, 'Expression'),\n\t\t([condition, , truthyExpression]) => context => {\n\t\t\treturn condition(context) ? truthyExpression(context) : undefined;\n\t\t}\n\t),\n\n\t/**\n\t * If-then-else condition, `if ? then : else`, the classic ternary operator.\n\t */\n\tnew ThymeleafRule('IfThenElseCondition',\n\t\tSequence('LogicalExpression', /\\?/, 'Expression', /:/, 'Expression'),\n\t\t([condition, , truthyExpression, , falseyExpression]) => context => {\n\t\t\treturn condition(context) ? truthyExpression(context) : falseyExpression(context);\n\t\t}\n\t),\n\n\n\t// Special tokens\n\t// ==============\n\n\t/**\n\t * An expression that matches the empty string.\n\t */\n\tnew ThymeleafRule('Nothing', /^$/),\n\n\n\t// Common language basics\n\t// ======================\n\n\tnew ThymeleafRule('Identifier', /[#a-zA-Z_][\\w]*/),\n\tnew ThymeleafRule('PropertyName', 'Identifier',\n\t\t(propertyName) => context => {\n\t\t\tlet property = propertyName(context);\n\t\t\treturn Object.prototype.hasOwnProperty.call(context, property) ? context[property] : '';\n\t\t}\n\t),\n\tnew ThymeleafRule('ArrayIndex', /([\\w]+)?(\\[[\\d]*])+/,\n\t\t(path) => context => {\n\t\t\treturn getByPath(context, path);\n\t\t}\n\t),\n\tnew ThymeleafRule('MethodCall',\n\t\tSequence('MethodName', /\\(/, Optional('MethodParameters'), /\\)/),\n\t\t([name, , parameters]) => (context, parameterContext) => {\n\t\t\tlet methodName = name(context);\n\t\t\tlet method = context[methodName];\n\t\t\tif (!method) {\n\t\t\t\tconsole.warn(`No method '${methodName}' present on the current context.  Expression: ${context.expression}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn method.apply(context, parameters(parameterContext || context));\n\t\t}\n\t),\n\tnew ThymeleafRule('MethodName', 'Identifier'),\n\tnew ThymeleafRule('MethodParameters',\n\t\tSequence('Chain', ZeroOrMore(Sequence(/,/, 'Chain'))),\n\t\t(parametersAndSeparators) => context => {\n\t\t\treturn parametersAndSeparators ?\n\t\t\t\tflatten(parametersAndSeparators)\n\t\t\t\t\t.filter(item => item !== ',')\n\t\t\t\t\t.map(parameter => parameter(context)) :\n\t\t\t\t[];\n\t\t}\n\t),\n\n\t/**\n\t * Any valid unit of code that resolves to some value.\n\t */\n\tnew ThymeleafRule('Expression',\n\t\tOrderedChoice(\n\t\t\t'LiteralSubstitution',\n\t\t\t'VariableExpression',\n\t\t\t'StringConcatenation',\n\t\t\t'Literal'\n\t\t)\n\t)\n);\n\nexport default ThymeleafExpressionLanguage;\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DEFAULT_CONFIGURATION}     from './Configurations.js';\nimport AttributeProcessor          from './processors/AttributeProcessor.js';\nimport ElementProcessor            from './processors/ElementProcessor.js';\nimport Matcher                     from './processors/Matcher.js';\nimport ExpressionProcessor         from './standard/expressions/ExpressionProcessor.js';\nimport FragmentSignatureGrammar    from './standard/expressions/FragmentSignatureGrammar.js';\nimport ThymeleafExpressionLanguage from './standard/expressions/ThymeleafExpressionLanguage.js';\nimport {deserialize, serialize}    from './utilities/Dom.js';\nimport {promisify}                 from './utilities/Functions.js';\n\nimport {readFile} from 'fs';\n\n/**\n * A highly-configurable class responsible for processing the Thymeleaf\n * directives found in HTML documents and fragments.\n * \n * @author Emanuel Rabina\n */\nexport default class TemplateEngine {\n\n\t/**\n\t * Constructor, set up a new template engine instance.\n\t * \n\t * @param {object} [config]\n\t * @param config.dialects\n\t * @param config.messageResolver\n\t * @param config.templateResolver\n\t */\n\tconstructor({dialects, messageResolver, templateResolver} = DEFAULT_CONFIGURATION) {\n\n\t\tthis.messageResolver  = messageResolver;\n\t\tthis.templateResolver = templateResolver;\n\t\tthis.expressionProcessor = new ExpressionProcessor(ThymeleafExpressionLanguage);\n\t\tthis.fragmentSignatureProcessor = new ExpressionProcessor(FragmentSignatureGrammar);\n\n\t\t// Combine all processors into a unified list\n\t\tthis.processors = dialects.reduce((acc, {processors}) => processors ? [\n\t\t\t...acc,\n\t\t\t...processors\n\t\t] : acc, []);\n\n\t\t// Combine all expression objects into a unified object\n\t\tthis.expressionObjects = dialects.reduce((acc, {expressionObjects}) => expressionObjects ? {\n\t\t\t...acc,\n\t\t\t...expressionObjects\n\t\t} : acc, {});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template data, returning the processed template.\n\t *\n\t * @param {string} template\n\t * @param {object} [context]\n\t * @return {Promise<string>}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocess(template, context = {}) {\n\n\t\tlet documentFragment = deserialize(template);\n\t\tlet rootElement = documentFragment.firstElementChild;\n\t\treturn this.processNode(rootElement, {\n\t\t\t...context,\n\t\t\t...this.expressionObjects,\n\t\t\t// TODO: Is there some way to make these things a dependency of the\n\t\t\t//       processors that need them?  Otherwise it feels like passing\n\t\t\t//       dependencies as part of the context object 🤔\n\t\t\texpressionProcessor: this.expressionProcessor,\n\t\t\tfragmentSignatureProcessor: this.fragmentSignatureProcessor,\n\t\t\tmessageResolver:  this.messageResolver,\n\t\t\ttemplateResolver: this.templateResolver\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn serialize(documentFragment);\n\t\t\t});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template at the given path, returning a promise of\n\t * the processed template.\n\t * \n\t * @param {string} filePath\n\t * @param {object} [context]\n\t * @return {Promise<string>}\n\t *   A promise of the processed template.  The promise is immediately rejected\n\t *   if this method is called in a browser environment.\n\t */\n\tprocessFile(filePath, context = {}) {\n\n\t\t/* global ENVIRONMENT */\n\t\treturn ENVIRONMENT === 'browser' ?\n\t\t\tPromise.reject(new Error('Cannot use TemplateEngine.processFile() inside a browser')) :\n\t\t\tpromisify(readFile)(filePath)\n\t\t\t\t.then(data => {\n\t\t\t\t\treturn this.process(data, context);\n\t\t\t\t});\n\t}\n\n\t/**\n\t * Process a DOM element.\n\t * \n\t * @private\n\t * @param {Element} element\n\t * @param {object} [context]\n\t * @return {Promise<boolean>} Whether or not the parent node needs\n\t *   reprocessing.\n\t */\n\tasync processNode(element, context = {}) {\n\n\t\tlet localVariables = element.__thymeleafLocalVariables || {};\n\t\tlet localContext = {\n\t\t\t...context,\n\t\t\t...localVariables\n\t\t};\n\t\tlet matcher = new Matcher();\n\n\t\t// Run the current element through the gamut of registered processors.  If\n\t\t// one of them sends a reprocessing signal, return from this method to let\n\t\t// the caller re-run everything.\n\t\tfor (let i = 0; i < this.processors.length; i++) {\n\t\t\tlet processor = this.processors[i];\n\t\t\tlet processorResult = false;\n\n\t\t\tlet match = matcher.matches(element, processor);\n\t\t\tif (match) {\n\t\t\t\tif (processor instanceof AttributeProcessor) {\n\t\t\t\t\tprocessorResult = await processor.process(element, match,\n\t\t\t\t\t\telement.getAttribute(match), localContext);\n\t\t\t\t}\n\t\t\t\telse if (processor instanceof ElementProcessor) {\n\t\t\t\t\tprocessorResult = await processor.process(element, localContext);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (processorResult) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Process this element's children, handling the reprocessing signal to\n\t\t// re-run the 'current' child element (could have been shifted due to being\n\t\t// removed etc).\n\t\tfor (let i = 0; i < element.children.length; ) {\n\t\t\tlet child = element.children[i];\n\t\t\tlet reprocess = await this.processNode(child, localContext);\n\t\t\tif (!reprocess) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["AttributeProcessor","constructor","prefix","name","isomorphic","process","element","attribute","attributeValue","context","removeAttribute","NAME","AttrAttributeProcessor","test","split","forEach","value","processorResult","expressionProcessor","setAttribute","escapeHtml","JSON","stringify","env","NODE_ENV","console","warn","ElementProcessor","NODE_TYPE_ELEMENT","getThymeleafAttributeValue","processorName","getAttribute","deserialize","htmlString","domDeserialize","serialize","documentFragment","domSerialize","BlockElementProcessor","parent","parentElement","firstChild","child","insertBefore","nodeType","__thymeleafLocalVariables","removeChild","CheckedAttributeProcessor","result","ClassAppendAttributeProcessor","classes","className","EachAttributeProcessor","iterationInfo","localValueName","iterable","templateNode","cloneNode","localClone","appendChild","EmptyableAttributeProcessor","toString","EMPTYABLE_ATTRIBUTE_NAMES","FragmentAttributeProcessor","IfAttributeProcessor","expressionResult","remove","extractFragment","dialectPrefix","fragmentInfo","templateResolver","templateName","fragmentName","template","$","log","InsertAttributeProcessor","clearChildren","fragment","fragmentSignature","FragmentAttributeProcessorName","parameterNames","fragmentSignatureProcessor","parameters","localContext","parameterName","index","RemovableAttributeProcessor","REMOVABLE_ATTRIBUTE_NAMES","RemoveAttributeProcessor","lastElementChild","firstElementChild","ReplaceAttributeProcessor","buildMessage","messageInfo","messageResolver","key","TextAttributeProcessor","messageResult","textContent","UnlessAttributeProcessor","parentNode","UTextAttributeProcessor","innerHTML","WithAttributeProcessor","localVariables","aliases","_ref","XmlNsAttributeProcessor","Dialect","expressionObjects","processors","DEFAULT_PREFIX","StandardDialect","arguments","length","undefined","map","attributeName","DEFAULT_CONFIGURATION","dialects","STANDARD_CONFIGURATION","Matcher","matches","processor","prefixes","unshift","hasAttribute","elementName","tagName","toUpperCase","InputBuffer","input","_defineProperty","clear","lastPosition","positionStack","pop","Error","exhausted","position","mark","push","markAndClearOrReset","func","reset","read","pattern","remaining","substring","leadingWhitespace","match","RegExp","source","exec","startsWith","newPosition","Parser","grammar","parse","inputBuffer","matchResult","accept","errorMessage","error","parseWithExpression","expression","rule","findRuleByName","trackExpression","stackSize","expressionStack","splice","ExpressionProcessor","parser","AllInput","ruleName","defaultMatchProcessor","Rule","matchProcessor","ThymeleafRule","contextSensitiveMatchProcessor","_len","args","Array","_key","apply","Grammar","startingRule","additionalRules","rules","concat","find","Optional","OneOrMore","results","OrderedChoice","expressions","Sequence","_len2","_key2","ZeroOrMore","_ref2","namesAndSeparators","flatten","filter","item","RegularExpression","matchers","parseResults","i","parseResult","getByPath","obj","path","paths","getPathArray","requestedObject","isArray","e","reduce","acc","el","replace","METADATA_FRAGMENT","METADATA_ITERATION","METADATA_MESSAGE","ThymeleafExpressionLanguage","chain","negation","link","linkContext","nextLink","_ref3","messageKey","messageParameters","type","messageParameter","_ref4","urlFunc","url","paramsList","slice","param","lhs","rhs","urlTemplate","head","placeholder","tail","paramEntry","_ref5","_ref6","join","_ref7","_ref8","expressionsAndSeparators","_ref9","iterationStatusVariable","collectionExpressionAction","alias","_ref10","parseFloat","values","_ref11","curr","_ref12","leftOperand","rightOperand","_ref13","_ref14","operator","_ref15","condition","truthyExpression","_ref16","falseyExpression","propertyName","property","Object","prototype","hasOwnProperty","call","_ref17","parameterContext","methodName","method","parametersAndSeparators","parameter","TemplateEngine","FragmentSignatureGrammar","rootElement","processNode","then","processFile","filePath","Promise","reject","matcher","children","reprocess"],"mappings":"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"}